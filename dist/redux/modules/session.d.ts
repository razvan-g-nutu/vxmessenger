import { Action } from 'redux-actions';
import { IAutoRecharge, IBundle, IChat, IChatFeatures, ICurrency, IGift, IGiftCategory, IOneClickRecharge, ISession } from '../store';
import types from '../../sagas/websockets/types';
export interface IHandleQuantitiesPayload {
    giftId: number;
    quantityToHandle: number;
}
export declare const SET_CHAT: string;
export declare const SET_CHAT_ID: string;
export declare const RESET_CHAT: string;
export declare const SET_CHANNEL: string;
export declare const RESET_CHANNEL: string;
export declare const SET_SESSION: string;
export declare const RESET_SESSION: string;
export declare const SET_WEBTOKEN: string;
export declare const SET_UPLOAD_MEDIA_URL: string;
export declare const DECREASE_CURRENT_GIFT_QUANTITY: string;
export declare const setWebtoken: (instanceId: string, payload?: string | undefined) => Action<import("../interfaces").IPayload<string>>;
export declare const setUploadMediaUrl: (instanceId: string, payload?: string | undefined) => Action<import("../interfaces").IPayload<string>>;
export declare const setChat: (instanceId: string, payload?: IChat | undefined) => Action<import("../interfaces").IPayload<IChat>>;
export declare const setChatId: (instanceId: string, payload?: string | undefined) => Action<import("../interfaces").IPayload<string>>;
export declare const resetChat: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setFreePlatformMessages: (instanceId: string, payload?: number | undefined) => Action<import("../interfaces").IPayload<number>>;
export declare const setChatFeatures: (instanceId: string, payload?: IChatFeatures | undefined) => Action<import("../interfaces").IPayload<IChatFeatures>>;
export declare const setCurrency: (instanceId: string, payload?: ICurrency | undefined) => Action<import("../interfaces").IPayload<ICurrency>>;
export declare const setChannel: (instanceId: string, payload?: string | undefined) => Action<import("../interfaces").IPayload<string>>;
export declare const resetChannel: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setSession: (instanceId: string, payload?: string | undefined) => Action<import("../interfaces").IPayload<string>>;
export declare const resetSession: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setGifts: (instanceId: string, payload?: IGift[] | undefined) => Action<import("../interfaces").IPayload<IGift[]>>;
export declare const setGiftCategories: (instanceId: string, payload?: IGiftCategory[] | undefined) => Action<import("../interfaces").IPayload<IGiftCategory[]>>;
export declare const setGiftBundles: (instanceId: string, payload?: IBundle[] | undefined) => Action<import("../interfaces").IPayload<IBundle[]>>;
export declare const setAutoRecharge: (instanceId: string, payload?: IAutoRecharge | undefined) => Action<import("../interfaces").IPayload<IAutoRecharge>>;
export declare const setOneClickRecharge: (instanceId: string, payload?: IOneClickRecharge | undefined) => Action<import("../interfaces").IPayload<IOneClickRecharge>>;
export declare const setLastChargedAmount: (instanceId: string, payload?: number | undefined) => Action<import("../interfaces").IPayload<number>>;
export declare const resetLastChargedAmount: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const initializeQuantitiesToInventoryGifts: (instanceId: string, payload?: types.IInventoryGift[] | undefined) => Action<import("../interfaces").IPayload<types.IInventoryGift[]>>;
export declare const decreaseCurrentGiftQuantity: (instanceId: string, payload?: IHandleQuantitiesPayload | undefined) => Action<import("../interfaces").IPayload<IHandleQuantitiesPayload>>;
export declare const resetCurrentQuantities: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const resetPlatformFreeChatDuration: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const syncQuantitiesOnMessageSent: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
declare const session: import("redux-actions").ReduxCompatibleReducer<ISession, ISession>;
export default session;
