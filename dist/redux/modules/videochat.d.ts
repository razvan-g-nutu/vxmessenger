import { Action } from "redux-actions";
import { ExitCode } from "../../services/ChatService/types";
import { PreChatInformationType, IResolution, IVideochat, VideochatInformationType, VideoChatType, ICameraDevice } from "../store";
export interface ISetExitMessagePayload {
    exitCode: ExitCode | number;
    exitMessage?: string;
}
export declare const SET_QUALITY: string;
export declare const SET_IS_MOBILE_MENU_OPEN: string;
export declare const OPEN_FULLSCREEN: string;
export declare const CLOSE_FULLSCREEN: string;
export declare const TOGGLE_FULLSCREEN: string;
export declare const SET_IS_MUTED_BY_CLIENT: string;
export declare const SET_IS_INITIALLY_MUTED: string;
export declare const DISPLAY_INITIALLY_MUTED_HINT: string;
export declare const HIDE_INITIALLY_MUTED_HINT: string;
export declare const SET_CAM2CAM_ACTIVE: string;
export declare const SET_CAM2CAM_INACTIVE: string;
export declare const SET_CAM2CAM_CAMERAS: string;
export declare const SET_CAM2CAM_SELECTED_CAMERA: string;
export declare const RESET_CAM2CAM_SELECTED_CAMERA: string;
export declare const CAM2CAM_MINIMIZE: string;
export declare const CAM2CAM_MAXIMIZE: string;
export declare const SET_CAM2CAM_STATUS: string;
export declare const SET_INFORMATION: string;
export declare const RESET_INFORMATION: string;
export declare const SET_PRE_CHAT_INFORMATION: string;
export declare const RESET_PRE_CHAT_INFORMATION: string;
export declare const OPEN_VIDEOCHAT: string;
export declare const CLOSE_VIDEOCHAT: string;
export declare const SET_TYPE: string;
export declare const RESET_TYPE: string;
export declare const SET_INITIAL_VIDEOCHAT_TYPE: string;
export declare const RESET_INITIAL_VIDEOCHAT_TYPE: string;
export declare const SET_VIDEOCHAT_TIME_LIMIT: string;
export declare const SET_LIVE_PREVIEW_TIME_LIMIT: string;
export declare const SET_LIVE_PREVIEW_TEXT_TIME_LIMIT: string;
export declare const SET_LIVE_PREVIEW_TEXT_TIME_LEFT: string;
export declare const SET_VIDEOCHAT_TIME_LIMIT_BELOW_THRESHOLD: string;
export declare const SET_IS_MUTED_BY_MODEL: string;
export declare const SET_INITIAL_RESOLUTION: string;
export declare const SET_PLAYING_STATUS: string;
export declare const SHOULD_RENDER_ONLY_VIDEOCHAT: string;
export declare const SET_EXIT_EVENT: string;
export declare const RESET_EXIT_EVENT: string;
export declare const SET_RESUME_CHAT_TIMESTAMP: string;
export declare const SET_SHOULD_HIDE_VIDEOCHAT_CONTROLS: string;
export declare const SET_IS_GROUP_CHAT: string;
export declare const SET_IS_IN_VOYEUR_MODE: string;
export declare const SET_GROUP_CHAT_PARTICIPANTS: string;
export declare const ADD_GROUP_CHAT_PARTICIPANT: string;
export declare const REMOVE_GROUP_CHAT_PARTICIPANT: string;
export declare const SET_GROUP_CHAT_CLIENTNAME: string;
export declare const SET_IS_AUTOPLAY_RESTRICTED: string;
export declare const setQuality: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
export declare const openFullscreen: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const closeFullscreen: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const toggleFullscreen: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setCam2CamActive: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setCam2CamInactive: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setCam2CamCameras: (instanceId: string, payload?: ICameraDevice[] | undefined) => Action<import("../interfaces").IPayload<ICameraDevice[]>>;
export declare const setCam2CamSelectedCamera: (instanceId: string, payload?: string | undefined) => Action<import("../interfaces").IPayload<string>>;
export declare const resetCam2CamSelectedCamera: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const cam2CamMinimize: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const cam2CamMaximize: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setCam2CamStatus: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setShouldHideVideochatControls: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
export declare const setInformation: (instanceId: string, payload?: VideochatInformationType | undefined) => Action<import("../interfaces").IPayload<VideochatInformationType>>;
export declare const resetInformation: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setPreChatInformation: (instanceId: string, payload?: PreChatInformationType | undefined) => Action<import("../interfaces").IPayload<PreChatInformationType>>;
export declare const resetPreChatInformation: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const openVideochat: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const closeVideochat: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setType: (instanceId: string, payload?: VideoChatType | undefined) => Action<import("../interfaces").IPayload<VideoChatType>>;
export declare const resetType: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setInitialVideoChatType: (instanceId: string, payload?: VideoChatType | undefined) => Action<import("../interfaces").IPayload<VideoChatType>>;
export declare const resetInitialVideoChatType: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setVideoChatTimeLimit: (instanceId: string, payload?: number | undefined) => Action<import("../interfaces").IPayload<number>>;
export declare const setVideoChatTimeLimitBelowThreshold: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
export declare const setLivePreviewTimeLimit: (instanceId: string, payload?: number | undefined) => Action<import("../interfaces").IPayload<number>>;
export declare const setLivePreviewTextTimeLeft: (instanceId: string, payload?: number | undefined) => Action<import("../interfaces").IPayload<number>>;
export declare const setLivePreviewTextTimeLimit: (instanceId: string, payload?: number | undefined) => Action<import("../interfaces").IPayload<number>>;
export declare const setHasAudio: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
export declare const setIsMutedByClient: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
export declare const setIsInitiallyMuted: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
export declare const displayInitiallyMutedHint: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const hideInitiallyMutedHint: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setPlayingStatus: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
export declare const setInitialResolution: (instanceId: string, payload?: IResolution | undefined) => Action<import("../interfaces").IPayload<IResolution>>;
export declare const setIsMobileMenuOpen: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
export declare const setShouldRenderOnlyVideochat: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
export declare const setExitEvent: (instanceId: string, payload?: ISetExitMessagePayload | undefined) => Action<import("../interfaces").IPayload<ISetExitMessagePayload>>;
export declare const resetExitEvent: (instanceId: string, payload?: any) => Action<import("../interfaces").IPayload<any>>;
export declare const setResumeChatTimestamp: (instanceId: string, payload?: Date | undefined) => Action<import("../interfaces").IPayload<Date>>;
export declare const setIsGroupChat: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
export declare const setIsInVoyeurMode: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
export declare const setGroupChatParticipants: (instanceId: string, payload?: string[] | undefined) => Action<import("../interfaces").IPayload<string[]>>;
export declare const addGroupChatParticipant: (instanceId: string, payload?: string | undefined) => Action<import("../interfaces").IPayload<string>>;
export declare const removeGroupChatParticipant: (instanceId: string, payload?: string | undefined) => Action<import("../interfaces").IPayload<string>>;
export declare const setGroupChatClientName: (instanceId: string, payload?: string | undefined) => Action<import("../interfaces").IPayload<string>>;
export declare const setIsAutoplayRestricted: (instanceId: string, payload?: boolean | undefined) => Action<import("../interfaces").IPayload<boolean>>;
declare const videochat: import("redux-actions").ReduxCompatibleReducer<IVideochat, IVideochat>;
export default videochat;
